cmd 명령어

<1강>

<깃 환경 설정>
git		: git 명령어 사용법 출력

git --version	: git 버전 확인

git config --global	: 단일 프로젝트가 아니라 컴퓨터 전체에서 동일한 옵션을 사용할 수 있도록 하는 것.

git config --global user.name normal-beom	: 깃 허브 계정 넣기
git config --global user.email dbskdlxlem13@gmail.com	: 깃 허브 이메일 주소 넣기
****************************************************************************************
<git 다운로드>
1. cd C:\Education_Git : 본인이 git을 저장하기 위해서 생성한 파일로 이동
2. git clone https://github.com/normal-beom/Git-tutorial.git : 저장소에 있는 모든 파일들이 다운로드한다.
-> C:\Education_Git 위치에 Git-tutorial 폴더 생성됨. (파일 내부에 .git 폴더 생성됨)
****************************************************************************************
<파일 넣기>
1. cd C:\Education_Git\Git-tutorial : Git-tutorial 폴더로 이동
2. git add document.txt : 폴더에 만들어둔 document.txt 파일 추가
3. git commit -m "Add Text File [document.txt]" : (커밋)파일이 업로드가 된 시점을 스냅샷으로 찍는다.
 - 나중에 프로젝트가 문제가 생겼을 때 다시 원상태로 복구하는 목적으로 사용
 -> 컴퓨터에 적용 완료. / github에는 적용 x
4. git push : github에 push하여 적용시킨다.
*****************************************************************************************
<2강>
<오픈소스 프로젝트>
부트스트랩(Bootstrap) : http://bootstrapk.com/
github 검색 Bootstrap

★README.md : 해당 오픈소스를 잘 설명해주는 글
 - 누가 이 프로젝트를 만들었는지, 어떻게 설치하는지 등 정보가 담겨있다.
******************************************************************************************
<컨트리뷰션(contribution) : 기여하다.> ( 기능추가, 보안취약점 수정, 오타 수정, 번역, 의견제시 )
 - 누구나 오픈소스에 참여해서 자신의 실력을 늘리고 다른 사람에게 도움을 줄 수 있다.
<컨트리뷰션 활동 (오픈소스 활동) 이유>
1. 기록으로 남기 때문에 이력서에 담을 수 있다.
 - 자신이 어떤 프로젝트를 운영하고, 컨트리뷰션 하는 것들이 기록에 남는다. (깃 허브 주소를 이력서에 적는다.)
2. 자신이 추가한 기능에 대한 타인의 평가를 들을 수 있고 개선시킬 수 있다.
<커미터(Committer) : 컨트리뷰션의 정보를 직접 확인해서 관리하는 프로젝트에 실제로 반영할 지 결정.> ( 특정 프로젝트에 대한 권한을 가진 사람. )
******************************************************************************************
<프로젝트를 오픈 소스로 공개하여 누구나 볼 수 있게 하는 이유>
1. 사회 공헌
2. 소프트웨어의 품질 향상
3. 어쩔 수 없이 : 오픈소스 라이센스 때문인 경구, 오픈소스를 사용하는 사람들은 라이센스에 맞게 오픈소스를 이용해야 한다.
<오픈소스 라이센스>
1. MIT License : 무료, 배포 가능, 소스코드 수정 가능, 2차 저작물 공개 의무 없음
2. Apache License : 무료, 배포 가능, 소스코드 수정 가능, 2차 저작물 공개 의무 없음
3. GPL : 무료, 배포 가능, 소스코드 수정 가능, 2차 저작물 공개 의무 있음.
******************************************************************************************
<3강>
<깃 장점>
1. 여러 사람들과 함께 효과적으로 관리하여 협업할 수 있다.
2. 여러 명이 병렬적으로 개발을 할 수 있게 해준다는 점에서 프로젝트 개발 속도를 매우 빠르게 해준다.
3. 이들이 작업한 내역을 효과적으로 관리할 수 있다는 것이 중요하다.
 - ★본인의 활동내역이 기록이 되어있어, 포트폴리오로 사용 가능하다.
4. SVN과 다르게 중앙 서버 없이 분산형으로 다양한 컴퓨터가 각자 특정 프로젝트를 리포즈터리로 
<깃 없을 경우>
1. usb 혹은 카카오톡 등으로 파일을 전달하며 작업해야 한다.
2. 일일히 구체적으로 작업을 정해놓지 않는 이상 동시에 작업하는 것은 매우 어렵다.
3. 깃 대신 서브버전 사용이 가능.
 -> <서브버전(SVN : Subversion) : 깃과 다르게 중앙 서버가 코드를 관리한다. SVN 자체도 오픈소스이다.>

3:00
